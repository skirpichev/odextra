function y = rattle(f,t,y0)
[h,y] = solver_init(t,y0);

dim = columns(y);
s = dim / 2;
p = 1 : s;
x = p + s;

dH = f{1};
G = f{2};
g = f{3};

m = columns(g(y0));

for n = 2:rows(y)
  y(n,:) = solver_solve(@(z) [z(p) - y(n - 1,p) - ...
                              (h(n - 1) / 2) * dH([z(p), y(n - 1,x)])(p) - ...
                              h(n - 1) * G(y(n-1,:)) * z(dim + 1:end), ...
                              z(x) - y(n-1,x) - (h(n - 1) / 2) * dH([z(p),y(n-1,x)])(x) - ...
                              (h(n - 1) / 2) * dH([z(p),z(x)])(x), ...
                              g([z(1:dim)])],[y(n - 1,:), ...
                        zeros(1,m)])(1:dim);

  % Projection step:
  y(n,p) = solver_solve(@(z) [z(p) - y(n,p) - ...
                              (h(n - 1) / 2) * dH(y(n,:))(p) - ...
                              h(n - 1) * G(y(n,:)) * z(s + 1:end), ...
                              dH([z(p),y(n,x)])(x) * G(y(n,:))'], ...
                        [y(n,p),zeros(1,m)])(p);
end
